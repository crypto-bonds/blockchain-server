version: '2.1'

services:
  client:
    image: client
    container_name: client
    build:
      context: ./client
      dockerfile: docker/server.dockerfile
    volumes:
      - ./client/public/:/usr/local/apache2/htdocs/
    expose:
      - 80
    ports:
      - 8080:80

  client-builder:
    image: client-builder
    container_name: client-builder
    build:
      context: ./client
      dockerfile: docker/builder.dockerfile
    volumes:
      - ./client/:/pirate-talk/client/
      - /pirate-talk/client/node_modules

  pirate-tp:
    image: hyperledger/sawtooth-shell:1.0
    container_name: pirate-tp
    volumes:
      - ./processor/:/pirate-talk/processor/
    environment:
      - PYTHONUNBUFFERED=0
    working_dir: /pirate-talk/processor/
    entrypoint: bin/pirate-tp --connect tcp://validator:4004

  validator:
    image: hyperledger/sawtooth-validator:1.0
    container_name: validator
    volumes:
      - .:/pirate-talk
    expose:
      - 4004
    ports:
      - 4004:4004
    entrypoint: |
      bash -c "
        if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen &&
          sawtooth keygen &&
          sawset genesis \
            -k /etc/sawtooth/keys/validator.priv \
            -o config-genesis.batch &&
          sawset proposal create \
            -k /etc/sawtooth/keys/validator.priv \
            sawtooth.swa.administrators=$$(cat /root/.sawtooth/keys/root.pub) \
            sawtooth.validator.batch_injectors=block_info \
            -o config.batch &&
          sawadm genesis config-genesis.batch config.batch
        fi;
        sawtooth-validator -vv \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind network:tcp://eth0:8800 \
        "

  rest-api:
    image: hyperledger/sawtooth-rest-api:1.0
    container_name: rest-api
    expose:
      - 8008
    ports:
      - 8008:8008
    entrypoint: |
      sawtooth-rest-api -vv
        --connect tcp://validator:4004
        --bind rest-api:8008

  shell:
    image: hyperledger/sawtooth-shell:1.0
    container_name: shell
    entrypoint: |
      bash -c "
        if [ ! -f /root/.sawtooth/keys/root.priv ]; then
          sawtooth keygen
        fi;
        tail -f /dev/null
      "

  settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: settings-tp
    entrypoint: settings-tp -vv --connect tcp://validator:4004

  block-info-tp:
    image: hyperledger/sawtooth-block-info-tp:1.0
    container_name: block-info-tp
    depends_on:
      - validator
    command: block-info-tp -vv --connect tcp://validator:4004

  sabre-tp:
    image: sabre-tp
    container_name: sabre-tp
    build:
      context: ./sabre
      dockerfile: tp/Dockerfile
    entrypoint: sawtooth-sabre -vv -C tcp://validator:4004

  sabre-cli:
    image: sabre-cli
    container_name: sabre-cli
    build:
      context: ./sabre
      dockerfile: cli/Dockerfile
    entrypoint: tail -f /dev/null

  seth-tp:
    image: seth-tp
    container_name: seth-tp
    build:
      context: ./seth
      dockerfile: processor/Dockerfile
    depends_on:
      - validator
    command: |
      bash -c "
        cp /debs/*.deb /build
        seth-tp -vv -C tcp://validator:4004
      "

  seth-cli:
    image: seth-cli
    container_name: seth-cli
    build:
      context: ./seth
      dockerfile: cli/Dockerfile
    depends_on:
      - rest-api
    entrypoint: |
      bash -c "
        cp /debs/*.deb /build
        seth init http://rest-api:8008 &&
        if [ ! -f /root/.sawtooth/keys/root.priv ]; then
          sawtooth keygen
        fi;
        tail -f /dev/null
      "

  seth-rpc:
    image: seth-rpc
    container_name: seth-rpc
    build:
      context: ./seth
      dockerfile: rpc/Dockerfile
    depends_on:
      - validator
    ports:
      - 3030:3030
    command: |
      bash -c "
        cp /debs/*.deb /build
        seth-rpc --connect tcp://validator:4004 --bind 0.0.0.0:3030
      "
